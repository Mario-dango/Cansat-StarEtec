
#include <Arduino.h>
#include "SoftwareSerial.h"


#include <TinyGPS++.h>

// Conexión con el módulo GPS NEO-6M
#define GPS_TX_PIN 34
#define GPS_RX_PIN 12

// Definición del objeto GPS 
SoftwareSerial gpsSerial(GPS_TX_PIN, GPS_RX_PIN);
TinyGPSPlus gps;

// Ajuste de la zona horaria local (UTC-3 para Mendoza, Argentina)
const int timeZoneOffset = -3;

void setup() {
  Serial.begin(115200);
  gpsSerial.begin(9600);
}

void loop() {
  delay(500);
  while (gpsSerial.available() > 0) {
    if (gps.encode(gpsSerial.read())) {
      if (gps.location.isValid()) {
        float latitude = gps.location.lat();
        float longitude = gps.location.lng();
        Serial.println();
        Serial.println("--------------------------------");
        Serial.println("----------  VALROES ------------");
        Serial.println("--------------------------------");
        Serial.print("Latitud: ");
        Serial.println(latitude, 6); // Imprime la latitud con 6 decimales
        Serial.print("Longitud: ");
        Serial.println(longitude, 6); // Imprime la longitud con 6 decimales
      
        // Obtener la altitud y velocidad
        float altitude = gps.altitude.meters();
        float speed = gps.speed.kmph();
        Serial.print("Altitud: ");
        Serial.print(altitude);       //  Arreglar altitud, tira 0 metros
        Serial.println(" metros");
        Serial.print("Velocidad: ");
        Serial.print(speed);          //  la velocidad es medio flashera
        Serial.println(" km/h");

        int hour = gps.time.hour();
        int day = gps.date.day();
        // Ajustar la hora a la zona horaria local (UTC-3 para Mendoza, Argentina)
        hour += timeZoneOffset;
        if (hour < 0) {
          hour += 24;
          day--;
        } else if (hour >= 24) {
          hour -= 24;
          day++;
        }

        // Obtener la fecha y hora
        if (gps.date.isValid()) {
          Serial.print("Fecha: ");
          Serial.print(gps.date.day());
          Serial.print("/");
          Serial.print(gps.date.month());
          Serial.print("/");
          Serial.print(gps.date.year());
          Serial.print(" ");
        } else {
          Serial.println("Fecha no válida");
        }

        if (gps.time.isValid()) {
          Serial.print("Hora: ");
          Serial.print(hour);
          Serial.print(":");
          Serial.print(gps.time.minute());
          Serial.print(":");
          Serial.print(gps.time.second());
        } else {
          Serial.println("Hora no válida");
        }
        Serial.println();
      } else {
        Serial.println("Sin señal GPS");
      }
    }
    // delay(500);
  }
}


// #include "TFMini.h"
// TFMini tfmini;
 
// SoftwareSerial SerialTFMini(25, 33);          //The only value that matters here is the first one, 2, Rx
 
// void getTFminiData(int* distance, int* strength)
// {
//   static char i = 0;
//   char j = 0;
//   int checksum = 0;
//   static int rx[9];
//   if (SerialTFMini.available())
//   {
//     rx[i] = SerialTFMini.read();
//     if (rx[0] != 0x59)
//     {
//       i = 0;
//     }
//     else if (i == 1 && rx[1] != 0x59)
//     {
//       i = 0;
//     }
//     else if (i == 8)
//     {
//       for (j = 0; j < 8; j++)
//       {
//         checksum += rx[j];
//       }
//       if (rx[8] == (checksum % 256))
//       {
//         *distance = rx[2] + rx[3] * 256;
//         *strength = rx[4] + rx[5] * 256;
//       }
//       i = 0;
//     }
//     else
//     {
//       i++;
//     }
//   }
// }
 
 
// void setup()
// {
//   Serial.begin(115200);       //Initialize hardware serial port (serial debug port)
//   while (!Serial);            // wait for serial port to connect. Needed for native USB port only
//   Serial.println ("Initializing...");
//   SerialTFMini.begin(TFMINI_BAUDRATE);    //Initialize the data rate for the SoftwareSerial port
//   tfmini.begin(&SerialTFMini);            //Initialize the TF Mini sensor
// }
 
// void loop()
// {
//   int distance = 0;
//   int strength = 0;
 
//   getTFminiData(&distance, &strength);
//   while (!distance)
//   {
//     getTFminiData(&distance, &strength);
//     if (distance)
//     {
//       Serial.print(distance);
//       Serial.print("cm\t");
//       Serial.print("strength: ");
//       Serial.println(strength);
//     }
//   }
//   delay(10);
// }
